[{"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js":"1","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js":"2","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js":"4","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js":"5","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js":"6","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js":"7","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js":"8","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js":"9","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js":"10","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js":"11","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js":"12","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js":"13","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js":"14","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js":"15","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js":"16","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js":"17","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js":"18","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js":"19","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js":"20","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js":"21","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js":"22","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js":"23","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js":"24","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js":"25","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js":"26","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js":"27","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js":"28","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js":"29","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js":"30","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js":"31","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js":"32","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js":"33","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js":"34","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\FormModal\\FormModal.js":"35"},{"size":802,"mtime":1610082342336,"results":"36","hashOfConfig":"37"},{"size":638,"mtime":1610075488805,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":1419,"mtime":1610090557313,"results":"40","hashOfConfig":"37"},{"size":232,"mtime":1610122529685,"results":"41","hashOfConfig":"37"},{"size":263,"mtime":1610608660324,"results":"42","hashOfConfig":"37"},{"size":260,"mtime":1610092125052,"results":"43","hashOfConfig":"37"},{"size":244,"mtime":1610084252040,"results":"44","hashOfConfig":"37"},{"size":345,"mtime":1610608660393,"results":"45","hashOfConfig":"37"},{"size":1076,"mtime":1627721361250,"results":"46","hashOfConfig":"37"},{"size":924,"mtime":1610080683416,"results":"47","hashOfConfig":"37"},{"size":798,"mtime":1610080700973,"results":"48","hashOfConfig":"37"},{"size":631,"mtime":1610608660397,"results":"49","hashOfConfig":"37"},{"size":462,"mtime":1627727287836,"results":"50","hashOfConfig":"37"},{"size":2984,"mtime":1627784076786,"results":"51","hashOfConfig":"37"},{"size":911,"mtime":1610083570597,"results":"52","hashOfConfig":"37"},{"size":921,"mtime":1610083854105,"results":"53","hashOfConfig":"37"},{"size":1785,"mtime":1627821159305,"results":"54","hashOfConfig":"37"},{"size":2456,"mtime":1627747983183,"results":"55","hashOfConfig":"37"},{"size":1538,"mtime":1627723013868,"results":"56","hashOfConfig":"37"},{"size":7009,"mtime":1627909803126,"results":"57","hashOfConfig":"37"},{"size":2662,"mtime":1627909021926,"results":"58","hashOfConfig":"37"},{"size":2081,"mtime":1627907473458,"results":"59","hashOfConfig":"37"},{"size":3188,"mtime":1627797453286,"results":"60","hashOfConfig":"37"},{"size":1670,"mtime":1610438972045,"results":"61","hashOfConfig":"37"},{"size":1430,"mtime":1610438972048,"results":"62","hashOfConfig":"37"},{"size":1211,"mtime":1610105138208,"results":"63","hashOfConfig":"37"},{"size":4621,"mtime":1627907252919,"results":"64","hashOfConfig":"37"},{"size":1211,"mtime":1627906686112,"results":"65","hashOfConfig":"37"},{"size":3730,"mtime":1627823424929,"results":"66","hashOfConfig":"37"},{"size":3196,"mtime":1627819703858,"results":"67","hashOfConfig":"37"},{"size":4533,"mtime":1627783998703,"results":"68","hashOfConfig":"37"},{"size":1065,"mtime":1627747123107,"results":"69","hashOfConfig":"37"},{"size":3672,"mtime":1627823181959,"results":"70","hashOfConfig":"37"},{"size":11693,"mtime":1627821723998,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"446dj0",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js",[],["148","149"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js",["150","151","152"],"import React, {useState, useEffect} from \"react\";\r\nimport styles from \"./OptionsBar.module.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterCountry, toggleLanguageRequirements, toggleOversubscribedUnis} from \"../../../actions\";\r\n\r\nconst OptionsBar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [countryList, setCountryList] = useState([<option>All countries</option>]);\r\n\r\n   /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n    function fetchOverseasUniversityCountries() {\r\n        axios.get(\"/api/countryOptions\")\r\n          .then((response) => {\r\n            console.log(response);\r\n            const fetchedCountries = response.data.map((country) => <option>{country.partner_country}</option>);\r\n            setCountryList([...countryList, ...fetchedCountries]);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n    \r\n      /**\r\n       * On component mount, fetch the list of overseas Universities and countries.\r\n       */\r\n      useEffect(() => {\r\n        dispatch(filterCountry(\"All countries\"))\r\n        fetchOverseasUniversityCountries();\r\n      }, []);\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop : \"20px\"}}>\r\n            <div className = {styles.header}>\r\n                <h2>Search filters</h2>\r\n            </div>\r\n            <h6>Select Country</h6>\r\n            <Form.Control as=\"select\" onChange = {(e) => dispatch(filterCountry(e.target.value))}>\r\n                {countryList}\r\n            </Form.Control>\r\n            <hr/>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OptionsBar;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js",["153","154"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js",["155"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js",["156","157","158","159","160","161","162"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js",["163","164"],"import React from \"react\";\r\nimport styles from \"./UniversityCard.module.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeUniversity} from \"../../../actions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport createPdf from \"../../../pdfCreator\"\r\nimport {useSelector} from \"react-redux\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FormModal from \"../FormModal/FormModal\";\r\n  \r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems: 'center',\r\n        justifyContent: \"space-evenly\",\r\n        position: 'absolute',\r\n        // width: \"90%\",\r\n        // height: \"90%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        }\r\n    }\r\n}));\r\n\r\nconst UniversityCard = (props) => {\r\n\r\n    const savedDetails = useSelector(store => store.pdfDetails);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <FormModal university = {props.university}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <Card.Body>\r\n                    {console.log()}\r\n                    <Card.Title>{props.university[\"University\"]}</Card.Title>\r\n                    <Card.Text>{props.location}</Card.Text>\r\n                    <Card.Text>{props.nusModuleInfo.map(mod => mod + \" \")}</Card.Text>\r\n                    <Card.Text>Modules mappable: {\" \" + props.nusModuleInfo.length}</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div className = {styles.buttons}>\r\n                        <Button variant=\"success\" onClick = {handleOpen}>Generate Form</Button>\r\n                        <Button variant=\"danger\" onClick = {() => dispatch(removeUniversity(props.id))}>Remove</Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                    {body}\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UniversityCard;\r\n\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js",["165"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js",["166"],"import React, {useState, useEffect} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OptionsBar from \"./OptionsBar/OptionsBar\";\r\nimport ResultTable from \"./ResultTable/ResultTable\";\r\nimport SavedModules from \"./SavedModules/SavedModules\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterUniversityResults, updateUniversityResults} from \"../../actions\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst UniversitySearch = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //TODO Should add this to REDUX so we can save the state\r\n    const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n\r\n    function fetchModulesOfUniversity() {\r\n        \r\n        const targetUniversity = {\r\n            \"information\" : {\r\n                \"university\" : selectedUniversity.partner_university,\r\n                \"faculty\" : \"All\"\r\n            }\r\n        }\r\n\r\n\r\n        axios.post(\"/api/module-pairing\", targetUniversity)\r\n            .then((response) => {\r\n                console.log(response.data[selectedUniversity.partner_university] === undefined);\r\n                if (response.data[selectedUniversity.partner_university] !== undefined) {\r\n                    dispatch(updateUniversityResults(response.data[selectedUniversity.partner_university]));\r\n                } else {\r\n                    dispatch(updateUniversityResults([]));\r\n                }\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Whenever the user selects a university, we fetch all mappable NUS modules of that university\r\n     */\r\n    useEffect(() => {\r\n        // console.log(selectedUniversity.partner_country);\r\n        // console.log(selectedUniversity.partner_information);\r\n        // console.log(selectedUniversity.partner_university);\r\n        if (selectedUniversity !== \"\") {\r\n            fetchModulesOfUniversity();\r\n        }\r\n\r\n    }, [selectedUniversity]);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <OptionsBar setSelectedUniversity = {setSelectedUniversity}/>\r\n            <hr></hr>\r\n            {\r\n                selectedUniversity === \"\"  \r\n                    ? null \r\n                    : <React.Fragment>\r\n                        <Typography>\r\n                            <h6>{selectedUniversity.partner_university}</h6>\r\n                            <h6>Location : {selectedUniversity.partner_country}</h6>\r\n                            <Link rel=\"noopener noreferrer\" href={selectedUniversity.partner_information} target=\"_blank\">\r\n                                {selectedUniversity.partner_university} - PDF\r\n                            </Link>\r\n                        </Typography>\r\n                        <hr></hr>\r\n                    </React.Fragment>\r\n            }\r\n            <Row style = {{display : \"flex\", justifyContent: \"center\"}}>\r\n                <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\"}}>\r\n                    <TextField id=\"outlined-basic\" label=\"Filter Results\" variant=\"outlined\" \r\n                        style={{ width: \"100%\" }} onChange = {(e => dispatch(filterUniversityResults(e.target.value)))}/>\r\n                </Col>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row style = {{display : \"flex\"}}>\r\n                <ResultTable/>\r\n                <SavedModules university = {selectedUniversity} />\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UniversitySearch;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js",["167","168"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function OptionsBar(props) {\r\n\r\n  const [overseasUniversityList, setOverseasUniversityList] = useState([]);\r\n  const [overseasUniversityDisplay, setOverseasUniversityDisplay] = useState([]);\r\n  const [overseasUniversityCountry, setOverseasUniversityCountry] = useState([{partner_country: \"All\"}]);\r\n  const [filterByCountry, setFilterByCountry] = useState(\"All\");\r\n\r\n  /**\r\n   * Fetches a list of overseas partner universities.\r\n   */\r\n  function fetchOverseasUniversities() {\r\n    axios.get(\"/api/universityOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityList(response.data);\r\n        setOverseasUniversityDisplay(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n  function fetchOverseasUniversityCountries() {\r\n    axios.get(\"/api/countryOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityCountry([...overseasUniversityCountry, ...response.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * On component mount, fetch the list of overseas Universities and countries.\r\n   */\r\n  useEffect(() => {\r\n    fetchOverseasUniversities();\r\n    fetchOverseasUniversityCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filterByCountry === \"All\") {\r\n      setOverseasUniversityDisplay(overseasUniversityList);\r\n    } else {\r\n      setOverseasUniversityDisplay(overseasUniversityList.filter((university) => university.partner_country === filterByCountry));\r\n    }\r\n  }, [filterByCountry]);\r\n\r\n\r\n  return (\r\n    <Row>\r\n    <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n      <Autocomplete\r\n          id=\"facultyList\"\r\n          options = {overseasUniversityCountry}\r\n          getOptionLabel={(options) => options.partner_country}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? setFilterByCountry(\"All\") : setFilterByCountry(value.partner_country) }\r\n          renderInput={(params) => <TextField {...params} label=\"Filter University by Country\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n      <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n        <Autocomplete\r\n          id=\"universityList\"\r\n          options = {overseasUniversityDisplay}\r\n          getOptionLabel={(options) => options.partner_university}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? props.setSelectedUniversity(\"\") : props.setSelectedUniversity(value)}\r\n          renderInput={(params) => <TextField {...params} label=\"Select University\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\FormModal\\FormModal.js",["169","170"],"import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changeName} from \"../../../actions\";\r\nimport {changePrimaryMajor} from \"../../../actions\";\r\nimport {changeStudentID} from \"../../../actions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    formControlTwo: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 300,\r\n      },\r\n  }));\r\n\r\n\r\nconst FormModal = (props) => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const savedDetails = useSelector(store => store.pdfDetails);\r\n    const dispatch = useDispatch();\r\n\r\n    const [choice, setChoice] = React.useState(1);\r\n    const [academicYear, setAcademicYear] = React.useState(\"AY2021/2022\");\r\n    const [semester, setSemester] = React.useState(1);\r\n    const [mappings, setMappings] = React.useState({});\r\n    const [mappingRow, setMappingRow] = React.useState([]);\r\n\r\n    /**\r\n     * Updates the mapping between a NUS module and it's overseas Module\r\n     * @param {*} nusModuleCode \r\n     * @param {*} overseasModuleCode \r\n     */\r\n    function updateMappings(nusModuleCode, overseasModuleCode) {\r\n        let updatedMapping = Object.assign({}, mappings);\r\n        updatedMapping[nusModuleCode] = overseasModuleCode;\r\n        setMappings(updatedMapping);\r\n    }\r\n\r\n    /**\r\n     * Creates a dictionay of all the unique modules that are mappable\r\n     * @param {} uniqueModules \r\n     */\r\n    function createMappings(uniqueModules) {\r\n        let newMappings = {};\r\n        for (let module of uniqueModules) {\r\n            Object.assign(newMappings, {[module] : \"Select Module\"});\r\n        }\r\n        setMappings(newMappings);\r\n    }\r\n\r\n    /**\r\n     * Creates the mapping form for each unique module.\r\n     * @param {*} uniqueModules \r\n     * @param {*} allMappings \r\n     */\r\n    function createMappingForm(uniqueModules, allMappings) {\r\n        let mappingRows = [];\r\n        for (let uniqueModule of uniqueModules) {\r\n            let possibleMappings = [];\r\n            for (let mappings of allMappings) {\r\n                if (mappings[\"Module\"] === uniqueModule) {\r\n                    possibleMappings.push(mappings[\"Partner Modules\"]);\r\n                }\r\n            }\r\n            \r\n            const mappingRow = <React.Fragment>\r\n                                    <Row>\r\n                                        <Col sm = {12} lg = {6}>\r\n                                        <TextField\r\n                                            disabled\r\n                                            id=\"filled-disabled\"\r\n                                            label=\"NUS Module Code\"\r\n                                            defaultValue= {uniqueModule}\r\n                                            variant=\"filled\"\r\n                                        />\r\n                                        </Col>\r\n                                        <Col sm = {12} lg = {6}>\r\n                                            <FormControl variant=\"outlined\" className={classes.formControlTwo}>\r\n                                                <InputLabel id=\"demo-simple-select-filled-label\">Overseas Module</InputLabel>\r\n                                                <Select\r\n                                                labelId=\"demo-simple-select-outlined-label\"\r\n                                                id=\"demo-simple-select-outlined\"\r\n                                                value = {mappings[uniqueModule]}\r\n                                                onChange={(event) => {updateMappings(uniqueModule, event.target.value)}}\r\n                                                label={mappings[uniqueModule]}\r\n                                                >   \r\n                                                <MenuItem value=\"Select Module\" disabled>\r\n                                                    Select Module\r\n                                                </MenuItem>\r\n                                                    {possibleMappings.map(module => <MenuItem value={module}>{module}</MenuItem>)}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Col>\r\n                                    </Row>\r\n                               </React.Fragment>\r\n\r\n            mappingRows.push(mappingRow);\r\n        }\r\n\r\n        setMappingRow(mappingRows);\r\n    }\r\n\r\n    function handleExport() {\r\n        //Need to add Error handling\r\n        let moduleInformation = [];\r\n        for (let module of props.university[\"Modules\"]) {\r\n            if (module[\"Partner Modules\"] === mappings[module[\"Module\"]]) {\r\n                let moduleObject = {\r\n                    \"nusModuleCode\": module[\"Module\"],\r\n                    \"nusModuleTitle\": module[\"Title\"],\r\n                    \"nusModuleCredit\": module[\"NUS Credits\"],\r\n                    \"partnerModule\": {\r\n                      \"partnerModuleCode\": module[\"Partner Modules\"],\r\n                      \"partnerModuleCredit\": module[\"Partner Credits\"],\r\n                      \"partnerModuleTitle\": module[\"Partner Title\"]\r\n                    }\r\n                }\r\n                moduleInformation.push(moduleObject);\r\n                console.log(moduleObject);\r\n            }\r\n        }\r\n\r\n        let pdfRequest = {\r\n            \"uni\": {\r\n                \"university\": props.university[\"University\"],\r\n                \"moduleInfo\": [...moduleInformation]\r\n              },\r\n              \"name\": savedDetails.name,\r\n              \"primaryMajor\": savedDetails.primaryMajor,\r\n              \"studentId\": savedDetails.studentId,\r\n              \"acadYear\": academicYear,\r\n              \"semester\": semester,\r\n              \"choice\": choice          \r\n        }\r\n\r\n        console.log(pdfRequest);\r\n    }\r\n\r\n    /**\r\n     * Generates a form when the user clicks on a saved university\r\n     */\r\n    useEffect(() => {\r\n        console.log(props.university);\r\n        createMappings(props.university[\"Unique Mappable\"]);\r\n    }, [props.university])\r\n\r\n    /**\r\n     * Whenever the module mappings change, we will update the form.\r\n     */\r\n    useEffect(() => {\r\n        if (Object.keys(mappings).length !== 0) {\r\n            createMappingForm(props.university[\"Unique Mappable\"], props.university[\"Modules\"]);\r\n        }\r\n    }, [mappings]);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form>\r\n                <Row>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <TextField id=\"outlined-search\" label=\"Full Name\" type=\"search\" variant=\"outlined\" onChange = {(e) => dispatch(changeName(e.target.value))}/>\r\n                    </Col>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <TextField id=\"outlined-search\" label=\"Primary Major\" type=\"search\" variant=\"outlined\" onChange = {(e) => dispatch(changePrimaryMajor(e.target.value))}/>\r\n\r\n                    </Col>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <TextField id=\"outlined-search\" label=\"Matriculation Number\" type=\"search\" variant=\"outlined\" onChange = {(e) => dispatch(changeStudentID(e.target.value))}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <TextField\r\n                            disabled\r\n                            id=\"filled-disabled\"\r\n                            label=\"Overseas University\"\r\n                            defaultValue= {props.university[\"University\"]}\r\n                            variant=\"filled\"\r\n                        />\r\n                    </Col>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Academic Year</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={academicYear}\r\n                            onChange={(event) => setAcademicYear(event.target.value)}\r\n                            label=\"Academic Year\"\r\n                            >\r\n                                <MenuItem value={\"AY2021/2022\"}>AY2021/2022</MenuItem>\r\n                                <MenuItem value={\"AY2022/2023\"}>AY2022/2023</MenuItem>\r\n                                <MenuItem value={\"AY2023/2024\"}>AY2023/2024</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col sm = {12} lg = {4}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Semester</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={semester}\r\n                            onChange={(event) => setSemester(event.target.value)}\r\n                            label=\"Semester\"\r\n                            >\r\n                                <MenuItem value={1}>1</MenuItem>\r\n                                <MenuItem value={2}>2</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm = {12} lg = {12}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Choice</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={choice}\r\n                            onChange={(event) => setChoice(event.target.value)}\r\n                            label=\"Choice\"\r\n                            >\r\n                                <MenuItem value={1}>1</MenuItem>\r\n                                <MenuItem value={2}>2</MenuItem>\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm = {12} lg = {12}>\r\n                        {mappingRow}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm = {12} lg = {12}>\r\n                        <div style = {{display : \"flex\", justifyContent : \"center\", marginTop : \"20px\"}}>\r\n                            <Button variant=\"success\" onClick = {() => handleExport()}>Export</Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n        </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FormModal;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":24,"nodeType":"177","messageId":"178","endLine":7,"endColumn":50},{"ruleId":"175","severity":1,"message":"179","line":7,"column":52,"nodeType":"177","messageId":"178","endLine":7,"endColumn":76},{"ruleId":"180","severity":1,"message":"181","line":35,"column":10,"nodeType":"182","endLine":35,"endColumn":12,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":106,"column":6,"nodeType":"182","endLine":106,"endColumn":25,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"186","line":116,"column":6,"nodeType":"182","endLine":116,"endColumn":20,"suggestions":"187"},{"ruleId":"180","severity":1,"message":"188","line":73,"column":6,"nodeType":"182","endLine":73,"endColumn":45,"suggestions":"189"},{"ruleId":"175","severity":1,"message":"190","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":11},{"ruleId":"175","severity":1,"message":"191","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":12},{"ruleId":"175","severity":1,"message":"192","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":11},{"ruleId":"175","severity":1,"message":"193","line":12,"column":10,"nodeType":"177","messageId":"178","endLine":12,"endColumn":20},{"ruleId":"175","severity":1,"message":"194","line":12,"column":22,"nodeType":"177","messageId":"178","endLine":12,"endColumn":40},{"ruleId":"175","severity":1,"message":"195","line":12,"column":42,"nodeType":"177","messageId":"178","endLine":12,"endColumn":57},{"ruleId":"175","severity":1,"message":"196","line":19,"column":11,"nodeType":"177","messageId":"178","endLine":19,"endColumn":19},{"ruleId":"175","severity":1,"message":"197","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":17},{"ruleId":"175","severity":1,"message":"198","line":50,"column":11,"nodeType":"177","messageId":"178","endLine":50,"endColumn":23},{"ruleId":"175","severity":1,"message":"199","line":16,"column":8,"nodeType":"177","messageId":"178","endLine":16,"endColumn":16},{"ruleId":"180","severity":1,"message":"200","line":58,"column":8,"nodeType":"182","endLine":58,"endColumn":28,"suggestions":"201"},{"ruleId":"180","severity":1,"message":"202","line":51,"column":6,"nodeType":"182","endLine":51,"endColumn":8,"suggestions":"203"},{"ruleId":"180","severity":1,"message":"204","line":59,"column":6,"nodeType":"182","endLine":59,"endColumn":23,"suggestions":"205"},{"ruleId":"175","severity":1,"message":"206","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":35},{"ruleId":"180","severity":1,"message":"207","line":169,"column":8,"nodeType":"182","endLine":169,"endColumn":18,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'toggleLanguageRequirements' is defined but never used.","Identifier","unusedVar","'toggleOversubscribedUnis' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchOverseasUniversityCountries'. Either include them or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'createData'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'createData' and 'universityResults'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'fetchMatchingUniversities'. Either include it or remove the dependency array.",["214"],"'Col' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'changeName' is defined but never used.","'changePrimaryMajor' is defined but never used.","'changeStudentID' is defined but never used.","'dispatch' is assigned a value but never used.","'createPdf' is defined but never used.","'savedDetails' is assigned a value but never used.","'mingSoon' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchModulesOfUniversity'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'fetchOverseasUniversityCountries'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'overseasUniversityList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOverseasUniversityDisplay' needs the current value of 'overseasUniversityList'.",["217"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'createMappingForm' and 'props.university'. Either include them or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch, fetchOverseasUniversityCountries]",{"range":"235","text":"236"},"Update the dependencies array to be: [createData, universityResults]",{"range":"237","text":"238"},"Update the dependencies array to be: [createData, savedHashSet, universityResults]",{"range":"239","text":"240"},"Update the dependencies array to be: [moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",{"range":"241","text":"242"},"Update the dependencies array to be: [fetchModulesOfUniversity, selectedUniversity]",{"range":"243","text":"244"},"Update the dependencies array to be: [fetchOverseasUniversityCountries]",{"range":"245","text":"246"},"Update the dependencies array to be: [filterByCountry, overseasUniversityList]",{"range":"247","text":"248"},"Update the dependencies array to be: [createMappingForm, mappings, props.university]",{"range":"249","text":"250"},[1309,1311],"[dispatch, fetchOverseasUniversityCountries]",[3326,3345],"[createData, universityResults]",[3703,3717],"[createData, savedHashSet, universityResults]",[2139,2178],"[moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",[2175,2195],"[fetchModulesOfUniversity, selectedUniversity]",[1674,1676],"[fetchOverseasUniversityCountries]",[1960,1977],"[filterByCountry, overseasUniversityList]",[6942,6952],"[createMappingForm, mappings, props.university]"]