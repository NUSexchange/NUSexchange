[{"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js":"1","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js":"2","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js":"4","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js":"5","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js":"6","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js":"7","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js":"8","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js":"9","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js":"10","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js":"11","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js":"12","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js":"13","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js":"14","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js":"15","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js":"16","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js":"17","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js":"18","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js":"19","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js":"20","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js":"21","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js":"22","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js":"23","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js":"24","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js":"25","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js":"26","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js":"27","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js":"28","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js":"29","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js":"30","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js":"31","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js":"32","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js":"33","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js":"34","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\FormModal\\FormModal.js":"35"},{"size":802,"mtime":1610082342336,"results":"36","hashOfConfig":"37"},{"size":638,"mtime":1610075488805,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":1419,"mtime":1610090557313,"results":"40","hashOfConfig":"37"},{"size":232,"mtime":1610122529685,"results":"41","hashOfConfig":"37"},{"size":263,"mtime":1610608660324,"results":"42","hashOfConfig":"37"},{"size":260,"mtime":1610092125052,"results":"43","hashOfConfig":"37"},{"size":244,"mtime":1610084252040,"results":"44","hashOfConfig":"37"},{"size":345,"mtime":1610608660393,"results":"45","hashOfConfig":"37"},{"size":1076,"mtime":1627721361250,"results":"46","hashOfConfig":"37"},{"size":924,"mtime":1610080683416,"results":"47","hashOfConfig":"37"},{"size":798,"mtime":1610080700973,"results":"48","hashOfConfig":"37"},{"size":631,"mtime":1610608660397,"results":"49","hashOfConfig":"37"},{"size":462,"mtime":1627727287836,"results":"50","hashOfConfig":"37"},{"size":2984,"mtime":1627784076786,"results":"51","hashOfConfig":"37"},{"size":911,"mtime":1610083570597,"results":"52","hashOfConfig":"37"},{"size":921,"mtime":1610083854105,"results":"53","hashOfConfig":"37"},{"size":1785,"mtime":1627821159305,"results":"54","hashOfConfig":"37"},{"size":2456,"mtime":1627747983183,"results":"55","hashOfConfig":"37"},{"size":1538,"mtime":1627723013868,"results":"56","hashOfConfig":"37"},{"size":7009,"mtime":1627909803126,"results":"57","hashOfConfig":"37"},{"size":2662,"mtime":1627909021926,"results":"58","hashOfConfig":"37"},{"size":2081,"mtime":1627907473458,"results":"59","hashOfConfig":"37"},{"size":3188,"mtime":1627797453286,"results":"60","hashOfConfig":"37"},{"size":1670,"mtime":1610438972045,"results":"61","hashOfConfig":"37"},{"size":1430,"mtime":1610438972048,"results":"62","hashOfConfig":"37"},{"size":1211,"mtime":1610105138208,"results":"63","hashOfConfig":"37"},{"size":4621,"mtime":1627907252919,"results":"64","hashOfConfig":"37"},{"size":1211,"mtime":1627906686112,"results":"65","hashOfConfig":"37"},{"size":3730,"mtime":1627823424929,"results":"66","hashOfConfig":"37"},{"size":3196,"mtime":1627819703858,"results":"67","hashOfConfig":"37"},{"size":4533,"mtime":1627783998703,"results":"68","hashOfConfig":"37"},{"size":1065,"mtime":1627747123107,"results":"69","hashOfConfig":"37"},{"size":3672,"mtime":1627823181959,"results":"70","hashOfConfig":"37"},{"size":12870,"mtime":1627915357953,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"446dj0",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js",[],["151","152"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js",["153","154","155"],"import React, {useState, useEffect} from \"react\";\r\nimport styles from \"./OptionsBar.module.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterCountry, toggleLanguageRequirements, toggleOversubscribedUnis} from \"../../../actions\";\r\n\r\nconst OptionsBar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [countryList, setCountryList] = useState([<option>All countries</option>]);\r\n\r\n   /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n    function fetchOverseasUniversityCountries() {\r\n        axios.get(\"/api/countryOptions\")\r\n          .then((response) => {\r\n            console.log(response);\r\n            const fetchedCountries = response.data.map((country) => <option>{country.partner_country}</option>);\r\n            setCountryList([...countryList, ...fetchedCountries]);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n    \r\n      /**\r\n       * On component mount, fetch the list of overseas Universities and countries.\r\n       */\r\n      useEffect(() => {\r\n        dispatch(filterCountry(\"All countries\"))\r\n        fetchOverseasUniversityCountries();\r\n      }, []);\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop : \"20px\"}}>\r\n            <div className = {styles.header}>\r\n                <h2>Search filters</h2>\r\n            </div>\r\n            <h6>Select Country</h6>\r\n            <Form.Control as=\"select\" onChange = {(e) => dispatch(filterCountry(e.target.value))}>\r\n                {countryList}\r\n            </Form.Control>\r\n            <hr/>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OptionsBar;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js",["156","157"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUniversity} from \"../../../actions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport objectHash from \"object-hash\";\r\nimport { AiOutlinePlus, AiOutlineCheck } from \"react-icons/ai\"\r\n\r\n\r\n// Material-UI styles\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n// Column definition for results table\r\nconst columns = [\r\n  { id: 'university', label: 'University', minWidth: 170 },\r\n  { id: 'location', label: 'Location', minWidth: 100 },\r\n  {\r\n    id: 'moduleNumber',\r\n    label: 'No. of Mappable Modules',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'actionButton',\r\n    label: 'Actions',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n  function processResults(universityResults) {\r\n    const processedUniversityResults = [];\r\n\r\n    for (let university of universityResults) {\r\n      const matchingModulesSet = new Set();\r\n      for (let module of university[\"Modules\"]) {\r\n        matchingModulesSet.add(module[\"Module\"]);\r\n      }\r\n\r\n      const universityWithUniqueModule = {\r\n        \"Country\" : university[\"Country\"],\r\n        \"Modules\" : university[\"Modules\"],\r\n        \"Total Mappable\" : university[\"Total Mappable\"],\r\n        \"University\" : university[\"University\"],\r\n        \"Unique Mappable\" : Array.from(matchingModulesSet)\r\n      }\r\n\r\n      processedUniversityResults.push(universityWithUniqueModule);\r\n\r\n    }\r\n\r\n    return processedUniversityResults;\r\n  }\r\n\r\n\r\n  // Redux state\r\n  const universityResults = useSelector(store => store.universityResults);\r\n  const myExchange = useSelector(store => store.myExchange);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [matchingUniversities, setMatchingUniversities] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [savedHashSet, setSavedHashSet] = React.useState([]);\r\n\r\n  const handleClick = (uni) => {\r\n    dispatch(addUniversity(uni));\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMatchingUniversities(processResults(universityResults)\r\n                            .sort((o1, o2) => o2[\"Total Mappable\"] - o1[\"Total Mappable\"])\r\n                            .map(university => createData(university)));\r\n  }, [universityResults]);\r\n\r\n  useEffect(() => {\r\n    setSavedHashSet([...myExchange.savedHashes]);\r\n  }, [myExchange]);\r\n  \r\n  useEffect(() => {\r\n    setMatchingUniversities(processResults(universityResults)\r\n                            .sort((o1, o2) => o2[\"Total Mappable\"] - o1[\"Total Mappable\"])\r\n                            .map(university => createData(university)));\r\n  }, [savedHashSet])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const popover = (nusModules) => (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Mappable Modules</Popover.Title>\r\n      <Popover.Content>\r\n          {nusModules.map((nusModule, index)=> <li key = {index}>{nusModule}</li>)}\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const button = (modules) => (\r\n      <OverlayTrigger trigger= {[\"hover\", \"focus\"]} placement=\"right\" overlay= {popover(modules)}>\r\n        <Button variant=\"light\">{modules.length}</Button>\r\n      </OverlayTrigger>\r\n  );\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function createData(uni) {\r\n    let university = uni[\"University\"];\r\n    let location = uni[\"Country\"];\r\n    let moduleNumber = <div> {button(uni[\"Unique Mappable\"])} </div>;\r\n    let actionButton = <Button variant = \"light\" type=\"button\" onClick = {() => handleClick(uni)}> {savedHashSet.includes(objectHash(uni)) ? <AiOutlineCheck /> : <AiOutlinePlus />}</Button>\r\n  \r\n    return {university, location, moduleNumber, actionButton};\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {matchingUniversities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={matchingUniversities.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Mapping Saved to myExchange!\r\n          </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js",["158"],"import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addModule, changeUniversities} from \"../../../../actions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function SearchBar() {\r\n  \r\n  // Redux Stores\r\n  const dispatch = useDispatch();\r\n  const set = useSelector(store => store.savedModules.moduleSet);\r\n  // TODO: At some point we can remove this. Dont need to go through redux to update this state since it will all be used locally anyway.\r\n  const moduleSearch = useSelector(store => store.savedModules.selectedModules).map(module => module.nus_module_code);\r\n  const countryFilter = useSelector(store => store.searchModuleOptions.country);\r\n\r\n  // Local State\r\n  const [moduleList, setModuleList] = useState([]);\r\n\r\n  /**\r\n   * Fetch list of available modules from the backend.\r\n   */\r\n  function fetchAllModules() {\r\n    axios.get(\"/api/modulesOptions\")\r\n    .then((response) => {\r\n      setModuleList(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Fetch list of universities that match the module and country requirements of the user.\r\n   * @param {*} requestParameters requestParameters object. \r\n   */\r\n  function fetchMatchingUniversities(requestParameters) {\r\n    axios.post(\"/api/university-matched\", requestParameters)\r\n    .then((response) => {\r\n      dispatch(changeUniversities(response.data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * On mounting the component, fetch all available modules.\r\n   */\r\n  useEffect(() => {\r\n    fetchAllModules();\r\n  }, []);\r\n\r\n  /**\r\n   * Whenever the user makes a change in the module selected, \r\n   * fetch the updated results.\r\n   */\r\n  useEffect(() => {\r\n\r\n    const requestParameters = {\r\n      information : { \r\n        \"modules\": moduleSearch,\r\n        \"countryFilter\" : countryFilter\r\n      }\r\n    }\r\n\r\n    fetchMatchingUniversities(requestParameters);\r\n    \r\n  }, [moduleSearch, countryFilter, dispatch]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={moduleList}\r\n      getOptionDisabled={(options) => set.has(options.nus_module_title)}\r\n      getOptionLabel={(options) => options.nus_module_code + \" \" + options.nus_module_title}\r\n      style={{ width: \"100%\" }}\r\n      onChange= {(e, v) => v != null ?  dispatch(addModule(v)) : null }\r\n      renderInput={(params) => <TextField {...params} label=\"Add Module\" variant=\"outlined\" />}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js",["159","160","161","162","163","164","165"],"import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { FaSadCry } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { changeName, changePrimaryMajor, changeStudentID } from \"../../actions\";\r\nimport styles from \"./SavedUniversities.module.css\";\r\nimport UniversityCard from \"./UniversityCard/UniversityCard\";\r\n\r\nconst SavedUniversities = () => {\r\n\r\n    const currUnis = useSelector(store => store.myExchange.universities);\r\n    const dispatch = useDispatch();\r\n\r\n    const hasSavedUnis = <div className = {styles.grid}>\r\n                            {currUnis.map((uni, index) => <UniversityCard key = {index} university = {uni} location = {uni[\"Country\"]} nusModuleInfo = {uni[\"Unique Mappable\"]} id = {uni.key}/>)}\r\n                        </div>;\r\n\r\n    const noSavedUnis = <Jumbotron style = {{width : \"100%\"}}>\r\n                            <h1>Looks like you haven't saved any universities! <FaSadCry /></h1>\r\n                            <p>\r\n                            Head over to our module search page and discover your best options for exchange!\r\n                            </p>\r\n                            <p>\r\n                            <Link to = \"/modules\">\r\n                                <Button variant=\"dark\">Let's Go!</Button>\r\n                            </Link>\r\n                            </p>\r\n                        </Jumbotron>\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop: \"30px\"}}>\r\n            <h3>Saved University Mappings</h3>\r\n            <hr />\r\n                <CardDeck>\r\n                    {currUnis.length === 0 ? noSavedUnis : hasSavedUnis}\r\n                </CardDeck>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SavedUniversities;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js",["166","167"],"import React from \"react\";\r\nimport styles from \"./UniversityCard.module.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeUniversity} from \"../../../actions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport createPdf from \"../../../pdfCreator\"\r\nimport {useSelector} from \"react-redux\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FormModal from \"../FormModal/FormModal\";\r\n  \r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems: 'center',\r\n        justifyContent: \"space-evenly\",\r\n        position: 'absolute',\r\n        // width: \"90%\",\r\n        // height: \"90%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        }\r\n    }\r\n}));\r\n\r\nconst UniversityCard = (props) => {\r\n\r\n    const savedDetails = useSelector(store => store.pdfDetails);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <FormModal university = {props.university}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <Card.Body>\r\n                    {console.log()}\r\n                    <Card.Title>{props.university[\"University\"]}</Card.Title>\r\n                    <Card.Text>{props.location}</Card.Text>\r\n                    <Card.Text>{props.nusModuleInfo.map(mod => mod + \" \")}</Card.Text>\r\n                    <Card.Text>Modules mappable: {\" \" + props.nusModuleInfo.length}</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div className = {styles.buttons}>\r\n                        <Button variant=\"success\" onClick = {handleOpen}>Generate Form</Button>\r\n                        <Button variant=\"danger\" onClick = {() => dispatch(removeUniversity(props.id))}>Remove</Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                    {body}\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UniversityCard;\r\n\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js",["168"],"import React, {useState} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport SearchBarMap from \"./SearchBarMap/SearchBarMap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {BiHappyBeaming} from \"react-icons/bi\";\r\nimport {FaSadCry} from \"react-icons/fa\";\r\nimport {ImNeutral2} from \"react-icons/im\";\r\nimport {HiEmojiHappy} from \"react-icons/hi\";\r\nimport {BiError} from \"react-icons/bi\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport axios from 'axios';\r\nimport styles from \"./Mapper.module.css\";\r\nimport mingSoon from \"../../images/MingSoon.png\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst noResult = <h1>Select an NUS module to compare with!<BiHappyBeaming /></h1>;\r\n\r\nconst redBand = <div className = {styles.redBand}>\r\n                    <h1>Oppsie! We've calculated that there's a low chance of mapping this module <FaSadCry /></h1>\r\n                </div>;\r\n\r\nconst yellowBand = <div className = {styles.yellowBand}>\r\n                        <h1>Hmm... It's somewhat similar so you might have a chance <ImNeutral2/></h1>\r\n                    </div>;\r\n\r\nconst greenBand = <div className = {styles.greenBand}>\r\n                        <h1>Oh wow! It's pretty similar! You've got a pretty good chance <HiEmojiHappy /></h1>\r\n                    </div>; \r\n\r\nconst errorResult = <h1>Oh no! Looks like something went wrong! <BiError /></h1>;\r\n\r\nconst Loading = <CircularProgress />\r\n\r\n\r\nconst Mapper = () => {\r\n    const [NUSmodule, setNUSmodule] = useState(\" \");\r\n    const [OtherModuleText, setOtherModuleText] = useState(\" \");\r\n    const [currView, setCurrView] = useState(noResult);\r\n\r\n    const updateModuleSelection = (newModule) => {\r\n        setNUSmodule(newModule);\r\n    }\r\n\r\n    const updateViewSuccess = (probability) => {\r\n        if (probability < 0.15) {\r\n            setCurrView(redBand);\r\n        } else if (probability < 0.3) {\r\n            setCurrView(yellowBand);\r\n        } else if (probability <= 1) {\r\n            setCurrView(greenBand);\r\n        } else {\r\n            setCurrView(errorResult);\r\n        }\r\n    }\r\n\r\n    const updateViewError = () => {\r\n        setCurrView(errorResult);\r\n    }\r\n\r\n    function fetchMatchProbability(nusModule, otherModule) {\r\n        let postObject = {\r\n            \"nusModule\": nusModule, \r\n            \"otherModule\": otherModule\r\n        }\r\n\r\n        console.log(postObject);\r\n        \r\n        axios.post(\"/api/nlp\", postObject)\r\n        .then((response) => {\r\n            let roundedData = Math.round(response.data[0] * 100) / 100;\r\n            console.log(response.data[0]);\r\n            console.log(roundedData);\r\n            updateViewSuccess(roundedData);\r\n        })\r\n        .catch((error) => {\r\n            updateViewError();\r\n        });\r\n    }\r\n\r\n    const calculateProbability = (nusModule, otherModule) => {\r\n        setCurrView(Loading);\r\n        fetchMatchProbability(nusModule, otherModule);\r\n    }\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop: \"30px\", marginBottom : \"20px\"}}>\r\n            <Row>\r\n                <Col lg = {5}>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <SearchBarMap setNUSmodule = {updateModuleSelection}/>\r\n                        <hr></hr>\r\n                        <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Overseas Module Description\"\r\n                        multiline\r\n                        rows={20}\r\n                        defaultValue=\"Overseas Module Description\"\r\n                        variant=\"outlined\"\r\n                        fullWidth = {true}\r\n                        onChange = {(e) => setOtherModuleText(e.target.value)}\r\n                        />\r\n                        <hr></hr>\r\n                        <div style = {{display: \"flex\", justifyContent: \"center\", marginBottom : \"20px\"}}>\r\n                            <Button onClick = {() => calculateProbability(NUSmodule, OtherModuleText)} variant=\"dark\">Calculate Probability</Button>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n                <Col lg = {7}>\r\n                    <Jumbotron style = {{height : \"100%\", display: \"flex\", alignItems: 'center', justifyContent: 'center', marginBottom : \"20px\"}}>\r\n                            {currView}\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Mapper;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js",["169"],"import React, {useState, useEffect} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OptionsBar from \"./OptionsBar/OptionsBar\";\r\nimport ResultTable from \"./ResultTable/ResultTable\";\r\nimport SavedModules from \"./SavedModules/SavedModules\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterUniversityResults, updateUniversityResults} from \"../../actions\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst UniversitySearch = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //TODO Should add this to REDUX so we can save the state\r\n    const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n\r\n    function fetchModulesOfUniversity() {\r\n        \r\n        const targetUniversity = {\r\n            \"information\" : {\r\n                \"university\" : selectedUniversity.partner_university,\r\n                \"faculty\" : \"All\"\r\n            }\r\n        }\r\n\r\n\r\n        axios.post(\"/api/module-pairing\", targetUniversity)\r\n            .then((response) => {\r\n                console.log(response.data[selectedUniversity.partner_university] === undefined);\r\n                if (response.data[selectedUniversity.partner_university] !== undefined) {\r\n                    dispatch(updateUniversityResults(response.data[selectedUniversity.partner_university]));\r\n                } else {\r\n                    dispatch(updateUniversityResults([]));\r\n                }\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Whenever the user selects a university, we fetch all mappable NUS modules of that university\r\n     */\r\n    useEffect(() => {\r\n        // console.log(selectedUniversity.partner_country);\r\n        // console.log(selectedUniversity.partner_information);\r\n        // console.log(selectedUniversity.partner_university);\r\n        if (selectedUniversity !== \"\") {\r\n            fetchModulesOfUniversity();\r\n        }\r\n\r\n    }, [selectedUniversity]);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <OptionsBar setSelectedUniversity = {setSelectedUniversity}/>\r\n            <hr></hr>\r\n            {\r\n                selectedUniversity === \"\"  \r\n                    ? null \r\n                    : <React.Fragment>\r\n                        <Typography>\r\n                            <h6>{selectedUniversity.partner_university}</h6>\r\n                            <h6>Location : {selectedUniversity.partner_country}</h6>\r\n                            <Link rel=\"noopener noreferrer\" href={selectedUniversity.partner_information} target=\"_blank\">\r\n                                {selectedUniversity.partner_university} - PDF\r\n                            </Link>\r\n                        </Typography>\r\n                        <hr></hr>\r\n                    </React.Fragment>\r\n            }\r\n            <Row style = {{display : \"flex\", justifyContent: \"center\"}}>\r\n                <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\"}}>\r\n                    <TextField id=\"outlined-basic\" label=\"Filter Results\" variant=\"outlined\" \r\n                        style={{ width: \"100%\" }} onChange = {(e => dispatch(filterUniversityResults(e.target.value)))}/>\r\n                </Col>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row style = {{display : \"flex\"}}>\r\n                <ResultTable/>\r\n                <SavedModules university = {selectedUniversity} />\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UniversitySearch;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js",["170","171"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function OptionsBar(props) {\r\n\r\n  const [overseasUniversityList, setOverseasUniversityList] = useState([]);\r\n  const [overseasUniversityDisplay, setOverseasUniversityDisplay] = useState([]);\r\n  const [overseasUniversityCountry, setOverseasUniversityCountry] = useState([{partner_country: \"All\"}]);\r\n  const [filterByCountry, setFilterByCountry] = useState(\"All\");\r\n\r\n  /**\r\n   * Fetches a list of overseas partner universities.\r\n   */\r\n  function fetchOverseasUniversities() {\r\n    axios.get(\"/api/universityOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityList(response.data);\r\n        setOverseasUniversityDisplay(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n  function fetchOverseasUniversityCountries() {\r\n    axios.get(\"/api/countryOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityCountry([...overseasUniversityCountry, ...response.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * On component mount, fetch the list of overseas Universities and countries.\r\n   */\r\n  useEffect(() => {\r\n    fetchOverseasUniversities();\r\n    fetchOverseasUniversityCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filterByCountry === \"All\") {\r\n      setOverseasUniversityDisplay(overseasUniversityList);\r\n    } else {\r\n      setOverseasUniversityDisplay(overseasUniversityList.filter((university) => university.partner_country === filterByCountry));\r\n    }\r\n  }, [filterByCountry]);\r\n\r\n\r\n  return (\r\n    <Row>\r\n    <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n      <Autocomplete\r\n          id=\"facultyList\"\r\n          options = {overseasUniversityCountry}\r\n          getOptionLabel={(options) => options.partner_country}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? setFilterByCountry(\"All\") : setFilterByCountry(value.partner_country) }\r\n          renderInput={(params) => <TextField {...params} label=\"Filter University by Country\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n      <Col lg = {12} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n        <Autocomplete\r\n          id=\"universityList\"\r\n          options = {overseasUniversityDisplay}\r\n          getOptionLabel={(options) => options.partner_university}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? props.setSelectedUniversity(\"\") : props.setSelectedUniversity(value)}\r\n          renderInput={(params) => <TextField {...params} label=\"Select University\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\FormModal\\FormModal.js",["172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":7,"column":24,"nodeType":"180","messageId":"181","endLine":7,"endColumn":50},{"ruleId":"178","severity":1,"message":"182","line":7,"column":52,"nodeType":"180","messageId":"181","endLine":7,"endColumn":76},{"ruleId":"183","severity":1,"message":"184","line":35,"column":10,"nodeType":"185","endLine":35,"endColumn":12,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":106,"column":6,"nodeType":"185","endLine":106,"endColumn":25,"suggestions":"188"},{"ruleId":"183","severity":1,"message":"189","line":116,"column":6,"nodeType":"185","endLine":116,"endColumn":20,"suggestions":"190"},{"ruleId":"183","severity":1,"message":"191","line":73,"column":6,"nodeType":"185","endLine":73,"endColumn":45,"suggestions":"192"},{"ruleId":"178","severity":1,"message":"193","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":11},{"ruleId":"178","severity":1,"message":"194","line":6,"column":8,"nodeType":"180","messageId":"181","endLine":6,"endColumn":12},{"ruleId":"178","severity":1,"message":"195","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":11},{"ruleId":"178","severity":1,"message":"196","line":12,"column":10,"nodeType":"180","messageId":"181","endLine":12,"endColumn":20},{"ruleId":"178","severity":1,"message":"197","line":12,"column":22,"nodeType":"180","messageId":"181","endLine":12,"endColumn":40},{"ruleId":"178","severity":1,"message":"198","line":12,"column":42,"nodeType":"180","messageId":"181","endLine":12,"endColumn":57},{"ruleId":"178","severity":1,"message":"199","line":19,"column":11,"nodeType":"180","messageId":"181","endLine":19,"endColumn":19},{"ruleId":"178","severity":1,"message":"200","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":17},{"ruleId":"178","severity":1,"message":"201","line":50,"column":11,"nodeType":"180","messageId":"181","endLine":50,"endColumn":23},{"ruleId":"178","severity":1,"message":"202","line":16,"column":8,"nodeType":"180","messageId":"181","endLine":16,"endColumn":16},{"ruleId":"183","severity":1,"message":"203","line":58,"column":8,"nodeType":"185","endLine":58,"endColumn":28,"suggestions":"204"},{"ruleId":"183","severity":1,"message":"205","line":51,"column":6,"nodeType":"185","endLine":51,"endColumn":8,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"207","line":59,"column":6,"nodeType":"185","endLine":59,"endColumn":23,"suggestions":"208"},{"ruleId":"178","severity":1,"message":"209","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":35},{"ruleId":"183","severity":1,"message":"210","line":198,"column":8,"nodeType":"185","endLine":198,"endColumn":18,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'toggleLanguageRequirements' is defined but never used.","Identifier","unusedVar","'toggleOversubscribedUnis' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchOverseasUniversityCountries'. Either include them or remove the dependency array.","ArrayExpression",["214"],"React Hook useEffect has a missing dependency: 'createData'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'createData' and 'universityResults'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'fetchMatchingUniversities'. Either include it or remove the dependency array.",["217"],"'Col' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'changeName' is defined but never used.","'changePrimaryMajor' is defined but never used.","'changeStudentID' is defined but never used.","'dispatch' is assigned a value but never used.","'createPdf' is defined but never used.","'savedDetails' is assigned a value but never used.","'mingSoon' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchModulesOfUniversity'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'fetchOverseasUniversityCountries'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has a missing dependency: 'overseasUniversityList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOverseasUniversityDisplay' needs the current value of 'overseasUniversityList'.",["220"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'createMappingForm' and 'props.university'. Either include them or remove the dependency array.",["221"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [dispatch, fetchOverseasUniversityCountries]",{"range":"238","text":"239"},"Update the dependencies array to be: [createData, universityResults]",{"range":"240","text":"241"},"Update the dependencies array to be: [createData, savedHashSet, universityResults]",{"range":"242","text":"243"},"Update the dependencies array to be: [moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",{"range":"244","text":"245"},"Update the dependencies array to be: [fetchModulesOfUniversity, selectedUniversity]",{"range":"246","text":"247"},"Update the dependencies array to be: [fetchOverseasUniversityCountries]",{"range":"248","text":"249"},"Update the dependencies array to be: [filterByCountry, overseasUniversityList]",{"range":"250","text":"251"},"Update the dependencies array to be: [createMappingForm, mappings, props.university]",{"range":"252","text":"253"},[1309,1311],"[dispatch, fetchOverseasUniversityCountries]",[3326,3345],"[createData, universityResults]",[3703,3717],"[createData, savedHashSet, universityResults]",[2139,2178],"[moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",[2175,2195],"[fetchModulesOfUniversity, selectedUniversity]",[1674,1676],"[fetchOverseasUniversityCountries]",[1960,1977],"[filterByCountry, overseasUniversityList]",[8083,8093],"[createMappingForm, mappings, props.university]"]