[{"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js":"1","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js":"2","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js":"4","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js":"5","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js":"6","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js":"7","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js":"8","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js":"9","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js":"10","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js":"11","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js":"12","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js":"13","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js":"14","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js":"15","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js":"16","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js":"17","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js":"18","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js":"19","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js":"20","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js":"21","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js":"22","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js":"23","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js":"24","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js":"25","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js":"26","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js":"27","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js":"28","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js":"29","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js":"30","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js":"31","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js":"32","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js":"33","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js":"34"},{"size":802,"mtime":1610082342336,"results":"35","hashOfConfig":"36"},{"size":638,"mtime":1610075488805,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":1419,"mtime":1610090557313,"results":"39","hashOfConfig":"36"},{"size":232,"mtime":1610122529685,"results":"40","hashOfConfig":"36"},{"size":263,"mtime":1610608660324,"results":"41","hashOfConfig":"36"},{"size":260,"mtime":1610092125052,"results":"42","hashOfConfig":"36"},{"size":244,"mtime":1610084252040,"results":"43","hashOfConfig":"36"},{"size":345,"mtime":1610608660393,"results":"44","hashOfConfig":"36"},{"size":1076,"mtime":1627721361250,"results":"45","hashOfConfig":"36"},{"size":924,"mtime":1610080683416,"results":"46","hashOfConfig":"36"},{"size":798,"mtime":1610080700973,"results":"47","hashOfConfig":"36"},{"size":631,"mtime":1610608660397,"results":"48","hashOfConfig":"36"},{"size":462,"mtime":1627727287836,"results":"49","hashOfConfig":"36"},{"size":2984,"mtime":1627784076786,"results":"50","hashOfConfig":"36"},{"size":911,"mtime":1610083570597,"results":"51","hashOfConfig":"36"},{"size":921,"mtime":1610083854105,"results":"52","hashOfConfig":"36"},{"size":1735,"mtime":1627741464457,"results":"53","hashOfConfig":"36"},{"size":2456,"mtime":1627747983183,"results":"54","hashOfConfig":"36"},{"size":1538,"mtime":1627723013868,"results":"55","hashOfConfig":"36"},{"size":5609,"mtime":1627737229606,"results":"56","hashOfConfig":"36"},{"size":2721,"mtime":1627735838231,"results":"57","hashOfConfig":"36"},{"size":3585,"mtime":1610435337710,"results":"58","hashOfConfig":"36"},{"size":1392,"mtime":1610105514522,"results":"59","hashOfConfig":"36"},{"size":1670,"mtime":1610438972045,"results":"60","hashOfConfig":"36"},{"size":1430,"mtime":1610438972048,"results":"61","hashOfConfig":"36"},{"size":1211,"mtime":1610105138208,"results":"62","hashOfConfig":"36"},{"size":4491,"mtime":1627738058580,"results":"63","hashOfConfig":"36"},{"size":633,"mtime":1627721852706,"results":"64","hashOfConfig":"36"},{"size":3467,"mtime":1627785665789,"results":"65","hashOfConfig":"36"},{"size":3196,"mtime":1627743354691,"results":"66","hashOfConfig":"36"},{"size":4533,"mtime":1627783998703,"results":"67","hashOfConfig":"36"},{"size":1065,"mtime":1627747123107,"results":"68","hashOfConfig":"36"},{"size":2060,"mtime":1627786224894,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"446dj0",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\index.js",[],["145","146"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\App.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Home.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\mapTool.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Universities.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\myExchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\Modules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\MainView.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\PageNavigation\\PageNavigation.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\MainView\\LinkButton\\LinkButton.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\universityResults.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\savedmodules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchmoduleoptions.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ModuleSearch.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\OptionsBar\\OptionsBar.js",["147","148","149"],"import React, {useState, useEffect} from \"react\";\r\nimport styles from \"./OptionsBar.module.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterCountry, toggleLanguageRequirements, toggleOversubscribedUnis} from \"../../../actions\";\r\n\r\nconst OptionsBar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [countryList, setCountryList] = useState([<option>All countries</option>]);\r\n\r\n   /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n    function fetchOverseasUniversityCountries() {\r\n        axios.get(\"/api/countryOptions\")\r\n          .then((response) => {\r\n            console.log(response);\r\n            const fetchedCountries = response.data.map((country) => <option>{country.partner_country}</option>);\r\n            setCountryList([...countryList, ...fetchedCountries]);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n    \r\n      /**\r\n       * On component mount, fetch the list of overseas Universities and countries.\r\n       */\r\n      useEffect(() => {\r\n        fetchOverseasUniversityCountries();\r\n      }, []);\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop : \"20px\"}}>\r\n            <div className = {styles.header}>\r\n                <h2>Search filters</h2>\r\n            </div>\r\n            <h6>Select Country</h6>\r\n            <Form.Control as=\"select\" onChange = {(e) => dispatch(filterCountry(e.target.value))}>\r\n                {countryList}\r\n            </Form.Control>\r\n            <hr/>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OptionsBar;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\actions\\index.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SavedModules.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\ResultTable\\ResultTable.js",["150"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUniversity} from \"../../../actions\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n// Material-UI styles\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n// Column definition for results table\r\nconst columns = [\r\n  { id: 'university', label: 'University', minWidth: 170 },\r\n  { id: 'location', label: 'Location', minWidth: 100 },\r\n  {\r\n    id: 'moduleNumber',\r\n    label: 'No. of Mappable Modules',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'actionButton',\r\n    label: 'Actions',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n  function processResults(universityResults) {\r\n    const processedUniversityResults = [];\r\n\r\n    for (let university of universityResults) {\r\n      const matchingModulesSet = new Set();\r\n      for (let module of university[\"Modules\"]) {\r\n        matchingModulesSet.add(module[\"Module\"]);\r\n      }\r\n\r\n      const universityWithUniqueModule = {\r\n        \"Country\" : university[\"Country\"],\r\n        \"Modules\" : university[\"Modules\"],\r\n        \"Total Mappable\" : university[\"Total Mappable\"],\r\n        \"University\" : university[\"University\"],\r\n        \"Unique Mappable\" : Array.from(matchingModulesSet)\r\n      }\r\n\r\n      processedUniversityResults.push(universityWithUniqueModule);\r\n\r\n    }\r\n\r\n    return processedUniversityResults;\r\n  }\r\n\r\n\r\n  // Redux state\r\n  const universityResults = useSelector(store => store.universityResults);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [matchingUniversities, setMatchingUniversities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"University Results\");\r\n    console.log(processResults(universityResults));\r\n    setMatchingUniversities(processResults(universityResults)\r\n                            .sort((o1, o2) => o2[\"Total Mappable\"] - o1[\"Total Mappable\"])\r\n                            .map(university => createData(university)));\r\n  }, [universityResults]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const popover = (nusModules) => (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Mappable Modules</Popover.Title>\r\n      <Popover.Content>\r\n          {nusModules.map((nusModule, index)=> <li key = {index}>{nusModule}</li>)}\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  \r\n  const button = (modules) => (\r\n      <OverlayTrigger trigger= {[\"hover\", \"focus\"]} placement=\"right\" overlay= {popover(modules)}>\r\n      <Button variant=\"light\">{modules.length}</Button>\r\n      </OverlayTrigger>\r\n  );\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function createData(uni) {\r\n    let university = uni[\"University\"];\r\n    let location = uni[\"Country\"];\r\n    let moduleNumber = <div> {button(uni[\"Unique Mappable\"])} </div>;\r\n    let actionButton = <Button variant = \"light\" type=\"button\" onClick = {() => { dispatch(addUniversity(uni));}}>Add +</Button>\r\n  \r\n    return {university, location, moduleNumber, actionButton};\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {matchingUniversities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={matchingUniversities.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\ModuleSearch\\SavedModules\\SearchBar\\SearchBar.js",["151"],"import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addModule, changeUniversities} from \"../../../../actions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function SearchBar() {\r\n  \r\n  // Redux Stores\r\n  const dispatch = useDispatch();\r\n  const set = useSelector(store => store.savedModules.moduleSet);\r\n  // TODO: At some point we can remove this. Dont need to go through redux to update this state since it will all be used locally anyway.\r\n  const moduleSearch = useSelector(store => store.savedModules.selectedModules).map(module => module.nus_module_code);\r\n  const countryFilter = useSelector(store => store.searchModuleOptions.country);\r\n\r\n  // Local State\r\n  const [moduleList, setModuleList] = useState([]);\r\n\r\n  /**\r\n   * Fetch list of available modules from the backend.\r\n   */\r\n  function fetchAllModules() {\r\n    axios.get(\"/api/modulesOptions\")\r\n    .then((response) => {\r\n      console.log(response);\r\n      setModuleList(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Fetch list of universities that match the module and country requirements of the user.\r\n   * @param {*} requestParameters requestParameters object. \r\n   */\r\n  function fetchMatchingUniversities(requestParameters) {\r\n    axios.post(\"/api/university-matched\", requestParameters)\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch(changeUniversities(response.data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * On mounting the component, fetch all available modules.\r\n   */\r\n  useEffect(() => {\r\n    fetchAllModules();\r\n  }, []);\r\n\r\n  /**\r\n   * Whenever the user makes a change in the module selected, \r\n   * fetch the updated results.\r\n   */\r\n  useEffect(() => {\r\n\r\n    const requestParameters = {\r\n      information : { \r\n        \"modules\": moduleSearch,\r\n        \"countryFilter\" : countryFilter\r\n      }\r\n    }\r\n\r\n    fetchMatchingUniversities(requestParameters);\r\n    \r\n  }, [moduleSearch, countryFilter, dispatch]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={moduleList}\r\n      getOptionDisabled={(options) => set.has(options.nus_module_title)}\r\n      getOptionLabel={(options) => options.nus_module_code + \" \" + options.nus_module_title}\r\n      style={{ width: \"100%\" }}\r\n      onChange= {(e, v) => v != null ? dispatch(addModule(v)) : null }\r\n      renderInput={(params) => <TextField {...params} label=\"Add Module\" variant=\"outlined\" />}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\SavedUniversities.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\SavedUniversities\\UniversityCard\\UniversityCard.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\myexchange.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\pdfDetails.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\pdfCreator.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\Mapper.js",["152","153"],"import React, {useState} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport SearchBarMap from \"./SearchBarMap/SearchBarMap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {BiHappyBeaming} from \"react-icons/bi\";\r\nimport {FaSadCry} from \"react-icons/fa\";\r\nimport {ImNeutral2} from \"react-icons/im\";\r\nimport {HiEmojiHappy} from \"react-icons/hi\";\r\nimport {BiError} from \"react-icons/bi\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\r\nimport axios from 'axios';\r\nimport styles from \"./Mapper.module.css\";\r\nimport mingSoon from \"../../images/MingSoon.png\";\r\n\r\nconst noResult = <h1>Select an NUS module to compare with!<BiHappyBeaming /></h1>;\r\n\r\nconst redBand = <div className = {styles.redBand}>\r\n                    <h1>Oppsie! We've calculated that there's a low chance of mapping this module <FaSadCry /></h1>\r\n                </div>;\r\n\r\nconst yellowBand = <div className = {styles.yellowBand}>\r\n                        <h1>Hmm... It's somewhat similar so you might have a chance <ImNeutral2/></h1>\r\n                    </div>;\r\n\r\nconst greenBand = <div className = {styles.greenBand}>\r\n                        <h1>Oh wow! It's pretty similar! You've got a pretty good chance <HiEmojiHappy /></h1>\r\n                    </div>; \r\n\r\nconst errorResult = <h1>Oh no! Looks like something went wrong! <BiError /></h1>;\r\n\r\nconst Loading = <div>\r\n                    <img className= {styles.rotate} src = {mingSoon} alt=\"logo\"/>\r\n                </div>\r\n\r\n\r\nconst Mapper = () => {\r\n    const [NUSmodule, setNUSmodule] = useState(\" \");\r\n    const [OtherModuleText, setOtherModuleText] = useState(\" \");\r\n    const [currView, setCurrView] = useState(noResult);\r\n\r\n    const updateModuleSelection = (newModule) => {\r\n        setNUSmodule(newModule);\r\n    }\r\n\r\n    const updateViewSuccess = (probability) => {\r\n        if (probability < 0.15) {\r\n            setCurrView(redBand);\r\n        } else if (probability < 0.3) {\r\n            setCurrView(yellowBand);\r\n        } else if (probability <= 1) {\r\n            setCurrView(greenBand);\r\n        } else {\r\n            setCurrView(errorResult);\r\n        }\r\n    }\r\n\r\n    const updateViewError = () => {\r\n        setCurrView(errorResult);\r\n    }\r\n\r\n    const calculateProbability = (nusModule, otherModule) => {\r\n        setCurrView(Loading);\r\n        setTimeout(3000);\r\n        axios.post(\"http://localhost:5000/getnlp/fetch\", {\"nusModule\": nusModule, \"otherModule\" : otherModule})\r\n            .then(function (response) {\r\n                let roundedData = Math.round(response.data[0] * 100) / 100;\r\n                console.log(response.data[0]);\r\n                console.log(roundedData);\r\n                updateViewSuccess(roundedData);\r\n            }).catch(function(error) {\r\n                updateViewError();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container fluid style = {{marginTop: \"30px\", marginBottom : \"20px\"}}>\r\n            <Row>\r\n                <Col lg = {5}>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        {/* <SearchBarMap setNUSmodule = {updateModuleSelection}/> */}\r\n                        <hr></hr>\r\n                        <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Overseas Module Description\"\r\n                        multiline\r\n                        rows={20}\r\n                        defaultValue=\"Overseas Module Description\"\r\n                        variant=\"outlined\"\r\n                        fullWidth = {true}\r\n                        onChange = {(e) => setOtherModuleText(e.target.value)}\r\n                        />\r\n                        <hr></hr>\r\n                        <div style = {{display: \"flex\", justifyContent: \"center\", marginBottom : \"20px\"}}>\r\n                            <Button onClick = {() => calculateProbability(NUSmodule, OtherModuleText)} variant=\"dark\">Calculate Probability</Button>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n                <Col lg = {7}>\r\n                    <Jumbotron style = {{height : \"100%\", display: \"flex\", alignItems: 'center', justifyContent: 'center', marginBottom : \"20px\"}}>\r\n                            {currView}\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Mapper;","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\Mapper\\SearchBarMap\\SearchBarMap.js",["154","155","156"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nexport default function SearchBarMap(props) {\r\n\r\n  return (\r\n    {/* <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={structuredModuleContent.sort()}\r\n      getOptionLabel={(options) => options.title + \" \" + options[\"NUS Module 1 Title\"]}\r\n      style={{ width: \"100%\" }}\r\n      onChange = {(e, v) => v != null ? props.setNUSmodule(v.title) : null}\r\n      renderInput={(params) => <TextField {...params} label=\"NUS Module to Compare\" variant=\"outlined\" />}\r\n    />  */}\r\n  );\r\n}\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\UniversitySearch.js",["157"],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\OptionsBar\\OptionsBar.js",["158","159"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function OptionsBar(props) {\r\n\r\n  const [overseasUniversityList, setOverseasUniversityList] = useState([]);\r\n  const [overseasUniversityDisplay, setOverseasUniversityDisplay] = useState([]);\r\n  const [overseasUniversityCountry, setOverseasUniversityCountry] = useState([{partner_country: \"All\"}]);\r\n  const [filterByCountry, setFilterByCountry] = useState(\"All\");\r\n\r\n  /**\r\n   * Fetches a list of overseas partner universities.\r\n   */\r\n  function fetchOverseasUniversities() {\r\n    axios.get(\"/api/universityOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityList(response.data);\r\n        setOverseasUniversityDisplay(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fetches a list of overseas countries that have partner universities with NUS.\r\n   */\r\n  function fetchOverseasUniversityCountries() {\r\n    axios.get(\"/api/countryOptions\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setOverseasUniversityCountry([...overseasUniversityCountry, ...response.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * On component mount, fetch the list of overseas Universities and countries.\r\n   */\r\n  useEffect(() => {\r\n    fetchOverseasUniversities();\r\n    fetchOverseasUniversityCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filterByCountry === \"All\") {\r\n      setOverseasUniversityDisplay(overseasUniversityList);\r\n    } else {\r\n      setOverseasUniversityDisplay(overseasUniversityList.filter((university) => university.partner_country === filterByCountry));\r\n    }\r\n  }, [filterByCountry]);\r\n\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg = {6} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n        <Autocomplete\r\n          id=\"universityList\"\r\n          options = {overseasUniversityDisplay}\r\n          getOptionLabel={(options) => options.partner_university}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? props.setSelectedUniversity(\"\") : props.setSelectedUniversity(value)}\r\n          renderInput={(params) => <TextField {...params} label=\"Select University\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n      <Col lg = {6} sm = {12} style = {{display : \"flex\", justifyContent: \"center\", marginTop : \"30px\"}}>\r\n      <Autocomplete\r\n          id=\"facultyList\"\r\n          options = {overseasUniversityCountry}\r\n          getOptionLabel={(options) => options.partner_country}\r\n          style={{ width: \"100%\" }}\r\n          onChange = {(event, value) => value === null ? setFilterByCountry(\"All\") : setFilterByCountry(value.partner_country) }\r\n          renderInput={(params) => <TextField {...params} label=\"Filter University by Country\" variant=\"outlined\" />}\r\n        /> \r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\ResultTable\\ResultTable.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\reducers\\searchByUniversity.js",[],"C:\\Users\\kishe\\Desktop\\NUSexchange\\client\\src\\components\\UniversitySearch\\SavedModules\\SavedModules.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":7,"column":24,"nodeType":"166","messageId":"167","endLine":7,"endColumn":50},{"ruleId":"164","severity":1,"message":"168","line":7,"column":52,"nodeType":"166","messageId":"167","endLine":7,"endColumn":76},{"ruleId":"169","severity":1,"message":"170","line":34,"column":10,"nodeType":"171","endLine":34,"endColumn":12,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":88,"column":6,"nodeType":"171","endLine":88,"endColumn":25,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"175","line":75,"column":6,"nodeType":"171","endLine":75,"endColumn":45,"suggestions":"176"},{"ruleId":"164","severity":1,"message":"177","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":20},{"ruleId":"164","severity":1,"message":"178","line":44,"column":11,"nodeType":"166","messageId":"167","endLine":44,"endColumn":32},{"ruleId":"164","severity":1,"message":"179","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":13},{"ruleId":"164","severity":1,"message":"180","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":17},{"ruleId":"164","severity":1,"message":"181","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"169","severity":1,"message":"182","line":56,"column":8,"nodeType":"171","endLine":56,"endColumn":28,"suggestions":"183"},{"ruleId":"169","severity":1,"message":"170","line":51,"column":6,"nodeType":"171","endLine":51,"endColumn":8,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"185","line":59,"column":6,"nodeType":"171","endLine":59,"endColumn":23,"suggestions":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'toggleLanguageRequirements' is defined but never used.","Identifier","unusedVar","'toggleOversubscribedUnis' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchOverseasUniversityCountries'. Either include it or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has a missing dependency: 'createData'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'fetchMatchingUniversities'. Either include it or remove the dependency array.",["191"],"'SearchBarMap' is defined but never used.","'updateModuleSelection' is assigned a value but never used.","'React' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchModulesOfUniversity'. Either include it or remove the dependency array.",["192"],["193"],"React Hook useEffect has a missing dependency: 'overseasUniversityList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOverseasUniversityDisplay' needs the current value of 'overseasUniversityList'.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"195","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [fetchOverseasUniversityCountries]",{"range":"206","text":"207"},"Update the dependencies array to be: [createData, universityResults]",{"range":"208","text":"209"},"Update the dependencies array to be: [moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",{"range":"210","text":"211"},"Update the dependencies array to be: [fetchModulesOfUniversity, selectedUniversity]",{"range":"212","text":"213"},{"range":"214","text":"207"},"Update the dependencies array to be: [filterByCountry, overseasUniversityList]",{"range":"215","text":"216"},[1259,1261],"[fetchOverseasUniversityCountries]",[2812,2831],"[createData, universityResults]",[2199,2238],"[moduleSearch, countryFilter, dispatch, fetchMatchingUniversities]",[2111,2131],"[fetchModulesOfUniversity, selectedUniversity]",[1674,1676],[1960,1977],"[filterByCountry, overseasUniversityList]"]